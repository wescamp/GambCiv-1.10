[event]
  name = side turn 1
  first_time_only = no
  [get_global_variable]
    namespace = gambciv.stats
    from_global = times_played
    to_local = times_played_$side_number
    side = $side_number
  [/get_global_variable]

  [lua]
    code = <<

      function url_decode(str)
	str = string.gsub (str, "+", " ")
	str = string.gsub (str, "%x%x",
	    function(h) return string.char(tonumber(h,16)) end)
	str = string.gsub (str, "\r\n", "\n")
	return str
      end

      function url_encode(str)
	if (str) then
	  str = string.gsub (str, "\n", "\r\n")
	  str = string.gsub (str, "%w",
	      function (c) return string.format ("%02X", string.byte(c)) end)
	  str = string.gsub (str, " ", "+")
	end
	return str
      end

      if(wesnoth.get_variable("side_number") == 1) then
	perm_table = wesnoth.get_variable("times_played_1")
	if(perm_table == "") then
	  perm_table = {}
	end
      end

      temp_table = wesnoth.get_variable("times_played_" .. wesnoth.get_variable("side_number"))
      if(temp_table == "") then
	temp_table = {}
      end

      for username,plays in pairs(temp_table) do
	if(string.match(url_decode(username),"^%w+$") and (perm_table[username] == nil or plays > perm_table[username])) then
	  perm_table[username] = plays
	end
      end
    >>
  [/lua]
[/event]

[event]
  name = turn 2

  [lua]
    code = <<
      for id,side in pairs(wesnoth.sides) do
	if(string.match(side.name,"^%w+$")) then
	  name = url_encode(side.name)
	  if(perm_table[name] == nil) then
	    perm_table[name] = 1
	  else
	    perm_table[name] = perm_table[name] + 1
	  end
	end
      end

      wesnoth.set_variable("times_played",perm_table)
    >>
  [/lua]
  [set_global_variable]
    namespace = gambciv.stats
    from_local = times_played
    to_global = times_played
    side = global
    immediate = yes
  [/set_global_variable]
[/event]